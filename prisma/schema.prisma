generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["mongoDb"]
}

datasource db {
  provider = "mongodb"
  url      = env("MONGOURI")
}

type QuestionsChoices {
  id       String  @map("_id") @db.ObjectId
  choice   String
  isNeeded Boolean
  marks    Int
  quizioID String
}

type RegistersDetail1 {
  key   String
  value String
}

model logs {
  id String @id @default(auto()) @map("_id") @db.ObjectId
}

model publishes {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  v           Int      @map("__v")
  publishedBy String
  quizID      String
  quizioID    String
  time        DateTime @db.Date
}

model questions {
  id           String             @id @default(auto()) @map("_id") @db.ObjectId
  v            Int                @map("__v")
  answer       String?
  autocheck    Boolean
  checkerNotes String?
  choices      QuestionsChoices[]
  createdOn    DateTime           @db.Date
  creator      String
  defaultMarks Int
  maxMarks     Int
  minMarks     Int
  question     String
  quizioID     String
  sectionID    String
  type         String
}

model quizzes {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  v           Int       @map("__v")
  createdOn   DateTime  @db.Date
  creator     String
  description String?
  endTime     DateTime? @db.Date
  name        String?
  owners      String[]
  quizioID    String
  sections    String[]
  startTime   DateTime? @db.Date
}

model registers {
  id        String           @id @default(auto()) @map("_id") @db.ObjectId
  v         Int              @map("__v")
  contactNo String
  detail1   RegistersDetail1
  email     String
  firstName String
  lastName  String
  orgName   String
  quizID    String
  quizioID  String
  userID    String
}

model responses {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  v            Int      @map("__v")
  answer       String?
  answerChoice String[]
  questionID   String
  quizioID     String
  time         DateTime @db.Date
  userID       String
}

model scores {
  id           String  @id @default(auto()) @map("_id") @db.ObjectId
  v            Int     @map("__v")
  autochecked  Boolean
  checkBy      String
  marks        Int
  questionID   String
  quizioID     String
  registrantID String
}

model sections {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  v           Int      @map("__v")
  createdOn   DateTime @db.Date
  creator     String
  description String
  questions   String[]
  quizID      String
  quizioID    String
  title       String
}

model submits {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  v        Int      @map("__v")
  quizID   String
  quizioID String
  time     DateTime @db.Date
  userID   String
}

model users {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  v              Int      @map("__v")
  dateAdded      DateTime @db.Date
  email          String   @unique(map: "email_1")
  firstName      String
  githubAvatar   String?
  githubUserName String?
  googleAvatar   String?
  lastName       String
  quizioID       String
  role           String
  username       String   @unique(map: "username_1")
}
