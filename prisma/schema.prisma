generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["mongoDb"]
}

datasource db {
  provider = "mongodb"
  url      = env("MONGOURI")
}

type QuestionsChoices {
  id       String  @map("_id") @db.ObjectId
  body     String
  isNeeded Boolean
  marks    Int
  quizioID String
}

type RegistersDetail1 {
  key   String
  value String
}

model logs {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  v         Int    @map("__v")
  frequency Int
  logType   String
  quizId    String @db.ObjectId
  username  String
}

model questions {
  id        String             @id @default(auto()) @map("_id") @db.ObjectId
  v         Int                @map("__v")
  autocheck Boolean
  choices   QuestionsChoices[]
  createdOn DateTime           @db.Date
  creator   String
  isMCQ     Boolean
  quizioID  String
  sectionID String
  type      String
}

model quizzes {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  v           Int       @map("__v")
  accessCode  String?
  createdOn   DateTime  @db.Date
  creator     String
  description String?
  endTime     DateTime? @db.Date
  name        String?
  owners      String[]
  quizioID    String
  sections    String[]
  startTime   DateTime? @db.Date
}

model registers {
  id        String            @id @default(auto()) @map("_id") @db.ObjectId
  v         Int               @map("__v")
  contactNo String?
  detail1   RegistersDetail1?
  email     String?
  firstName String?
  lastName  String?
  orgName   String?
  quizID    String
  quizioID  String
  username  String
}

model responses {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  v            Int      @map("__v")
  answer       String
  answerChoice String[]
  questionID   String
  quizioID     String
  time         DateTime @db.Date
  username     String
}

model sections {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  v           Int      @map("__v")
  createdOn   DateTime @db.Date
  creator     String
  description String?
  questions   String[]
  quizID      String?
  quizioID    String
  title       String?
}

model submits {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  v        Int      @map("__v")
  quizID   String
  quizioID String
  time     DateTime @db.Date
  username String
}

model users {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  v              Int       @map("__v")
  date           DateTime? @db.Date
  dateAdded      DateTime? @db.Date
  email          String    @unique(map: "email_1")
  firstName      String
  githubAvatar   String?
  githubUserName String?
  googleAvatar   String
  lastName       String
  quizzes        String[]  @db.ObjectId
  role           String
  username       String    @unique(map: "username_1")
}
